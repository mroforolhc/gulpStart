@require '../../../node_modules/rupture/rupture/index.styl'

$jsonSettings = json('../settings.json', { hash: true })
$breakpoints = $jsonSettings.grid

rupture.scale = ''
rupture.scale-names = ''
rupture.anti-overlap = -1px

// fill rupture variables
for $scale, $breakpoint in $breakpoints
    push(rupture.scale, unit($breakpoint.size, px))
    push(rupture.scale-names, $scale)

// delete first elements ('')
shift(rupture.scale)
shift(rupture.scale-names)

// --------------------------------------- //

mx-sqrt($x)
    return math($x, 'sqrt')

// Крестик
mx-cross($color, $thick, $w, $h = $w)
    height: $h
    width: $w
    display inline-block
    position: absolute
    &::before, &::after
        transform-origin: top
        position: absolute
        content: ''
        top: 0
        height: mx-sqrt($w*$w + $h*$h) - 2px
        width: $thick
        background-color: $color

    &::before
        right: 0
        transform: rotate(45deg)
    &::after
        left: 0
        transform: rotate(-45deg)

mx-arrow($dir, $color, $weight, $width, $height = $width)
    transform-origin 50% 50%
    position relative
    width $width
    height $height
    &::before, &::after
        content ''
        display block
        position absolute
        background-color $color

    if $dir == 'top'
        &::before
            width round(mx-sqrt($width*$width/4 + $height*$height))
            transform-origin 100% 0
            height $weight
            right 50%
            transform rotate(-(45deg))
        &::after
            width round(mx-sqrt($width*$width/4 + $height*$height))
            transform-origin 0 0
            top $paddingY
            height $weight
            left 50%
            transform rotate(45deg)
    else if $dir = 'left'
        &::before
            height round(mx-sqrt($height*$height/4 + $width*$width))
            width $weight
            transform-origin 0 100%
            left 0
            bottom 50%
            transform rotate(45deg)
        &::after
            height round(mx-sqrt($height*$height/4 + $width*$width))
            width $weight
            transform-origin 0 0
            left 0
            top 50%
            transform rotate(-45deg)

padding-x($left, $right = $left)
    padding-left: $left
    padding-right: $right

padding-y($top, $bottom = $top)
    padding-top: $top
    padding-bottom: $bottom

margin-x($left, $right = $left)
    margin-left: $left
    margin-right: $right

margin-y($top, $bottom = $top)
    margin-top: $top
    margin-bottom: $bottom

size($width, $height = $width)
    width: $width
    height: $height

img-url($file)
    url($img-path + $file)

font-url($font) // $font = folder + name, example: ComicSans/Comicsans.ttf
    url($font-path + $font)

mx-font-face($name, $path, $weight = false, $style = false)
    @font-face
        font-family: $name
        if $path == 'local'
            src: local($name)
        else
            src: font-url($path + '.woff2') format('woff2'), font-url($path + '.woff') format('woff')
        font-weight: $weight if $weight
        font-style: $style if $style

divide($list, $value)
    $list1 = clone($list)
    for v, i in $list
        if $list[i] != n
            $list1[i] = $list[i] / $value
        else
            $list1[i] = n
    return $list1

neg($list)
    $list1 = clone($list)
    for v, i in $list
        if $list[i] != n
            $list1[i] = -($list[i])
        else
            $list1[i] = n
    return $list1

set($prop, $list1, $startFrom = 0)
    $list = $list1
    if length($list) <= length(rupture.scale-names)
        if $list[$startFrom] == n
            $last = 0
            for v, i in $list
                if i < $startFrom && v != n
                    $last = v
            $list[$startFrom] = $last
        for v, i in $list
            if v != n && i >= $startFrom
                if i == 0
                    {$prop}: v;
                else
                    +above(rupture.scale-names[i])
                        {$prop}: v;

// ------- Sprite mixins ---------- //
sprite-scale($sprite, $w...)
    spriteImage($sprite)
    if $w[0] != n
        $scale = $w[0] / $sprite[4]
        background-size $scale*$sprite[6]
        background-position $sprite[2] *$scale $sprite[3] *$scale
        width $w[0]
        height $sprite[5] * $scale
    if length($w) > 1
        for i in (1..length($w) - 1)
            if $w[i] != n
                +above(rupture.scale-names[i])
                    sprite-rescale $sprite $w[i]


sprite-rescale($sprite, $w = full)
    if $w != full
        $scale = $w / $sprite[4]
        background-size $scale*$sprite[6]
        background-position $sprite[2] *$scale $sprite[3] *$scale
        width $w
        height $sprite[5] * $scale
    else
        spritePosition($sprite)
        spriteWidth($sprite)
        spriteHeight($sprite)
        background-size $sprite[6]

// ----------------------------------- //
